classdef c_modesource < c_lumBaseObject
% Lumerical mode source object
% unique to fdtd
% 
% author: bohan
%
% List of properties of the lumerical object
% returned when called ?set; on a modesource model object:
% amplitude
% bandwidth
% bend orientation
% bend radius
% bent waveguide
% center frequency
% center wavelength
% direction
% eliminate discontinuities
% enabled
% frequency
% frequency points
% frequency span
% frequency start
% frequency stop
% imported index
% imported power
% imported wavelength start
% imported wavelength stop
% injection axis
% mode selection
% multifrequency field profile
% multifrequency mode calculation
% name
% offset
% optimize for short pulse
% override global source settings
% phase
% phi
% pulse type
% pulselength
% rotation offset
% set frequency
% set time domain
% set wavelength
% theta
% type
% use global source settings
% use relative coordinates
% wavelength span
% wavelength start
% wavelength stop
% x
% x max
% x min
% x span
% x0
% y
% y max
% y min
% y span
% y0
% z
% z max
% z min
% z span
% z0

    properties
        
        model_type;
        name;          

    end     % end properties
    
    
    methods
        
        function obj = c_modesource( varargin )
            % constructor
            %
            % inputs:
            %   varargin = name value pairs
            %           where name must be one of the valid props
            
            % valid property names
            valid_props =   { ...
                            'amplitude', ...
                            'bandwidth', ...
                            'bend orientation', ...
                            'bend radius', ...
                            'bent waveguide', ...
                            'center frequency', ...
                            'center wavelength', ...
                            'direction', ...
                            'eliminate discontinuities', ...
                            'enabled', ...
                            'frequency', ...
                            'frequency points', ...
                            'frequency span', ...
                            'frequency start', ...
                            'frequency stop', ...
                            'imported index', ...
                            'imported power', ...
                            'imported wavelength start', ...
                            'imported wavelength stop', ...
                            'injection axis', ...
                            'mode selection', ...
                            'multifrequency field profile', ...
                            'multifrequency mode calculation', ...
                            'name', ...
                            'offset', ...
                            'optimize for short pulse', ...
                            'override global source settings', ...
                            'phase', ...
                            'phi', ...
                            'pulse type', ...
                            'pulselength', ...
                            'rotation offset', ...
                            'set frequency', ...
                            'set time domain', ...
                            'set wavelength', ...
                            'theta', ...
                            'type', ...
                            'use global source settings', ...
                            'use relative coordinates', ...
                            'wavelength span', ...
                            'wavelength start', ...
                            'wavelength stop', ...
                            'x', ...
                            'x max', ...
                            'x min', ...
                            'x span', ...
                            'x0', ...
                            'y', ...
                            'y max', ...
                            'y min', ...
                            'y span', ...
                            'y0', ...
                            'z', ...
                            'z max', ...
                            'z min', ...
                            'z span', ...
                            'z0' ...
                            };

            obj = obj@c_lumBaseObject( valid_props, varargin{:} );
                        
            obj.model_type  = 'ModeSource';
            
        end     % end constructor()
        

    end     % end methods
    
end






































